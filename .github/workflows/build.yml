name: build
on: [push, pull_request]
jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: ["quick-js", "duktape"]
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Set up rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cache rust artifacts
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.features }}
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --no-default-features --features ${{ matrix.features }}
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features ${{ matrix.features }} --no-fail-fast

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    name: "deploy crate"
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Get release version
        run: |
          echo "TAG_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.TAG_VERSION }}"
      - name: Set up rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Login to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CRATES_TOKEN }}
      - name: Run cargo publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_VERSION }}
          name: Release ${{ env.TAG_VERSION }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

